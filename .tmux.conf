# Reloding the configuration file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Using the mouse
set -g mouse on

# Binding the split panels
unbind |
unbind _
bind _ split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"

# Navigating to different panels
unbind h
unbind j
unbind k
unbind l
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# Allowing lots of output history
set -g history-limit 100000

# Navigate windows
unbind w
unbind m
unbind a
unbind s
bind w new-window -c "#{pane_current_path}"
bind m command-prompt "rename-window '%%'"
bind -n C-a previous-window
bind -n C-s next-window

# Indexing of windows
set -g base-index 1
set-window-option -g pane-base-index 1

# Copy mode config
set-window-option -g mode-keys vi
unbind -T copy-mode-vi Space;
unbind -T copy-mode-vi Enter;
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"

# Smart pane switching (working with vim)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \ | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Status
set -g status on

# Getting colors
set -g default-terminal "tmux-256color"
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"

setw -g window-status-current-style fg='#282a36',bg='#ff8700'
set -g status-left "#[fg=black]#[bg=#5f8500] #{b:pane_current_path} "
set -g window-status-current-format "#[fg=black,bold bg=default]│#[fg=white bg=#5f8500]#W#[fg=black,bold bg=default]│"
set -g window-status-current-format "#[fg=black bg=default]#[fg=black bg=#5f8500] #W #[fg=black,bold bg=default]"
set -g status-right "#[fg=black] #[bg=#5f8500] %b %d %l:%M %p"
set -g status-justify centre

set -g status-bg '#080808'
set -g status-bg colour232
set -g status-fg white
